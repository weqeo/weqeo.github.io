<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>WEQEO</title>
  <subtitle>我们有很多的声音而没有真理，我们来自一个良心却各自藏起。</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://weqeo.com/"/>
  <updated>2016-11-28T03:18:22.000Z</updated>
  <id>http://weqeo.com/</id>
  
  <author>
    <name>weqeo</name>
    <email>weqeo1989@gmail.com</email>
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Linux端搭建Apollo服务器</title>
    <link href="http://weqeo.com/2016/11/28/Linux%E7%AB%AF%E6%90%AD%E5%BB%BAApollo%E6%9C%8D%E5%8A%A1%E5%99%A8/"/>
    <id>http://weqeo.com/2016/11/28/Linux端搭建Apollo服务器/</id>
    <published>2016-11-28T03:18:22.000Z</published>
    <updated>2016-11-28T03:18:22.000Z</updated>
    
    <content type="html"><![CDATA[<h3 id="第一步：下载与解压："><a href="#第一步：下载与解压：" class="headerlink" title="第一步：下载与解压："></a>第一步：下载与解压：</h3><p>下载需要的Apollo版本，在任意目录解压，如1.7.1版本<br><a href="http://activemq.apache.org/apollo/download.html" target="_blank" rel="external">点我去下载</a><br>完成后解压。</p>
<h3 id="第二步：-创建apollo实例"><a href="#第二步：-创建apollo实例" class="headerlink" title="第二步：    创建apollo实例"></a>第二步：    创建apollo实例</h3><p>`</p>
<h1 id="cd-var-lib"><a href="#cd-var-lib" class="headerlink" title="cd /var/lib"></a>cd /var/lib</h1><p> `</p>
<p>创建实例：<br><code>{APOLLO_HOME}/bin/apollo create mybroker</code><br>（ps：{APOLLO_HOME}即解压后的文件夹所在位置）</p>
<p>如果成功的话就会弹出下面这一段话：<br> <img src="https://ooo.0o0.ooo/2016/11/28/583ba0cbe2bed.png" alt="Apollo部署1.png"></p>
<p>###第三步： 打开端口<br>上一步完成后是可以直接执行run的，但是跑起来客户端也连接不上，因为我们需要打开服务器部署的端口以及web端的控制台的端口。<br>修改/etc/sysconfig/iptables文件，</p>
<h1 id="vi-etc-sysconfig-iptables"><a href="#vi-etc-sysconfig-iptables" class="headerlink" title="vi /etc/sysconfig/iptables"></a>vi /etc/sysconfig/iptables</h1><p>添加端口号:61613、61614、61680、61681<br>插入：<code>-A INPUT -m state --state NEW -m tcp -p tcp --dport 端口号 -j ACCEPT</code></p>
<p>有一个需要注意的地方，如果待会儿跑起来的时候提示61613、61614两个端口已经被使用的话，那就改成62613、62614即可，步骤一样，修改Apollo服务器的端口需要在<code>/var/lib/mybroker/etc</code> 文件夹下的<code>apollo.xml</code>文件中修改,在图中如下位置，哪个端口被占用了就改哪个，同时修改后的端口也需要打开。<br> <img src="https://ooo.0o0.ooo/2016/11/28/583ba0cc09821.png" alt="Apollo部署2.png"></p>
<p>###第四步：运行<br>执行：<code>/var/lib/mybroker/bin/apollo-broker run</code> 即可（非root 权限下加sudo）<br>看到下图即表示运行成功：<br> <img src="https://ooo.0o0.ooo/2016/11/28/583ba0cc09121.png" alt="Apollo部署3.png"></p>
<p>第五步：登录web端的控制台，管理apollo服务端<br>如果是在Linux本机上操作的话，直接浏览器中输入<code>http://127.0.0.1:61680</code>即可；<br>如果是在远程登陆Linux进行操作的话，则需要修改配置文件中的<code>web_admin bind</code>，将<code>http://127.0.0.1:61680</code>换为<code>http://LinuxIP:61680</code>，如图：<br> <img src="https://ooo.0o0.ooo/2016/11/28/583ba0cc09d17.png" alt="Apollo部署4.png"><br>在浏览器中输入登陆地址后，会出现如下界面<br><img src="https://ooo.0o0.ooo/2016/11/28/583ba0cbf2b6c.png" alt="Apollo部署5.png"><br>默认初始账户及密码为：<code>admin&amp;password</code><br>登陆成功后：即可进入控制台进行主题添加等相关操作。<br><img src="https://ooo.0o0.ooo/2016/11/28/583ba0cc09a77.png" alt="Apollo部署6.png"></p>
]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;第一步：下载与解压：&quot;&gt;&lt;a href=&quot;#第一步：下载与解压：&quot; class=&quot;headerlink&quot; title=&quot;第一步：下载与解压：&quot;&gt;&lt;/a&gt;第一步：下载与解压：&lt;/h3&gt;&lt;p&gt;下载需要的Apollo版本，在任意目录解压，如1.7.1版本&lt;br&gt;&lt;a h
    
    </summary>
    
      <category term="Apollo,mqtt,即时通讯" scheme="http://weqeo.com/categories/Apollo-mqtt-%E5%8D%B3%E6%97%B6%E9%80%9A%E8%AE%AF/"/>
    
    
      <category term="Apollo,mqtt,即时通讯" scheme="http://weqeo.com/tags/Apollo-mqtt-%E5%8D%B3%E6%97%B6%E9%80%9A%E8%AE%AF/"/>
    
  </entry>
  
  <entry>
    <title>移动端利用strongSwan搭建VPN服务器</title>
    <link href="http://weqeo.com/2016/11/08/%E7%A7%BB%E5%8A%A8%E7%AB%AF%E5%88%A9%E7%94%A8strongSwan%E6%90%AD%E5%BB%BA%E6%9C%8D%E5%8A%A1%E5%99%A8/"/>
    <id>http://weqeo.com/2016/11/08/移动端利用strongSwan搭建服务器/</id>
    <published>2016-11-08T03:18:04.000Z</published>
    <updated>2016-11-08T05:47:56.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="概要"><a href="#概要" class="headerlink" title="概要"></a>概要</h2><p>使用strongSwan IKEv2 VPN协议搭建移动端VPN服务器，因iOS和Android支持的IKEv2协议类型不一样，所以要对iOS和Android分别使用不同的vpn配置</p>
<h2 id="编译安装strongSwan"><a href="#编译安装strongSwan" class="headerlink" title="编译安装strongSwan"></a>编译安装strongSwan</h2><h3 id="下载"><a href="#下载" class="headerlink" title="下载"></a>下载</h3><p>从<a href="https://strongswan.org/" target="_blank" rel="external">https://strongswan.org/</a>下载最新版本strongSwan代码，并解压</p>
<h3 id="编译"><a href="#编译" class="headerlink" title="编译"></a>编译</h3><p>进入解压后的strongSwan目录，开始编译和安装(configure -&gt; make -&gt; install)</p>
<ul>
<li><p>配置<br>未指定配置文件目录，默认配置文件目录为<code>/usr/local/etc</code></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">./configure --enable-openssl --enable-nat-transport --disable-mysql --disable-ldap  --disable-static --enable-shared --enable-md4 --enable-eap-mschapv2 --enable-eap-aka --enable-eap-aka-3gpp2  --enable-eap-gtc --enable-eap-identity --enable-eap-md5 --enable-eap-peap --enable-eap-radius --enable-eap-sim --enable-eap-sim-file --enable-eap-simaka-pseudonym --enable-eap-simaka-reauth --enable-eap-simaka-sql --enable-eap-tls --enable-eap-tnc --enable-eap-ttls</div></pre></td></tr></table></figure>
</li>
<li><p>编译</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">make</div></pre></td></tr></table></figure>
</li>
<li><p>安装</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">make install</div></pre></td></tr></table></figure>
</li>
</ul>
<h2 id="生成证书"><a href="#生成证书" class="headerlink" title="生成证书"></a>生成证书</h2><h3 id="CA证书-根证书"><a href="#CA证书-根证书" class="headerlink" title="CA证书(根证书)"></a>CA证书(根证书)</h3><blockquote>
<p>CA证书用于对服务器证书进行签名，并在Android客户端(iOS支持免证书认证)导入，用于认证服务器是否可信</p>
</blockquote>
<ul>
<li><p>生成CA私钥</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">ipsec pki --gen --outform pem &gt; ca.pem</div></pre></td></tr></table></figure>
</li>
<li><p>基于CA私钥生成CA证书</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">ipsec pki --self --in ca.pem --dn &quot;C=CN, O=QLVPN, CN=VPN CA&quot; --ca --outform pem &gt; ca.cert.pem</div></pre></td></tr></table></figure>
</li>
</ul>
<h3 id="服务器证书"><a href="#服务器证书" class="headerlink" title="服务器证书"></a>服务器证书</h3><blockquote>
<p>不同的服务器自身证书不同，但必须使用相同的CA证书进行签名</p>
</blockquote>
<ul>
<li><p>生成服务器私钥</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">ipsec pki --gen --outform pem &gt; server.pem</div></pre></td></tr></table></figure>
</li>
<li><p>用CA证书和服务器私钥签发服务器证书  </p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">ipsec pki --pub --in server.pem | ipsec pki --issue --cacert ca.cert.pem --cakey ca.pem --dn &quot;C=CN, O=QLVPN, CN=106.75.193.72&quot; --san=&quot;106.75.193.72&quot; --flag serverAuth --flag ikeIntermediate --outform pem &gt; server.cert.pem</div></pre></td></tr></table></figure>
</li>
</ul>
<p>–dn, –san，–flag 是一些客户端方面的特殊要求：</p>
<pre><code>* iOS 客户端要求 CN 也就是通用名必须是你的服务器的 URL 或 IP 地址;
* Windows 7 不但要求了上面，还要求必须显式说明这个服务器证书的用途（用于与服务器进行认证），--flag serverAuth;
* 非 iOS 的 Mac OS X 要求了「IP 安全网络密钥互换居间（IP Security IKE Intermediate）」这种增强型密钥用法（EKU），--flag ikdeIntermediate;
* Android 和 iOS 都要求服务器别名（serverAltName）就是服务器的 URL 或 IP 地址，--san。
--------
</code></pre><p><strong>不同的VPN服务器签发证书时参数不一致(IP地址不一致)，一定要使用服务器对应的IP地址进行证书签发</strong></p>
<h3 id="Client证书-当前没有使用"><a href="#Client证书-当前没有使用" class="headerlink" title="Client证书(当前没有使用)"></a>Client证书(当前没有使用)</h3><ul>
<li><p>生成私钥</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">ipsec pki --gen --outform pem &gt; client.pem</div></pre></td></tr></table></figure>
</li>
<li><p>签发证书(用户客户端认证)</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">ipsec pki --pub --in client.pem | ipsec pki --issue --cacert ca.cert.pem --cakey ca.pem --dn &quot;C=CN, O=QLVPN, CN=VPN Client&quot; --outform pem &gt; client.cert.pem</div></pre></td></tr></table></figure>
</li>
</ul>
<h2 id="安装证书"><a href="#安装证书" class="headerlink" title="安装证书"></a>安装证书</h2><p>将生成的CA证书、服务器证书、客户端证书拷贝到strongSwan相应的配置目录下<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">cp -r ca.cert.pem     /usr/local/etc/ipsec.d/cacerts/</div><div class="line">cp -r server.cert.pem /usr/local/etc/ipsec.d/certs/</div><div class="line">cp -r server.pem      /usr/local/etc/ipsec.d/private/</div><div class="line">cp -r client.cert.pem /usr/local/etc/ipsec.d/certs/</div><div class="line">cp -r client.pem      /usr/local/etc/ipsec.d/private/</div><div class="line">``` </div><div class="line"></div><div class="line">## 配置strongSwan</div><div class="line">### 配置`ipsec.conf`</div><div class="line">- 添加iOS配置信息</div></pre></td></tr></table></figure></p>
<p>conn ios-ikev2<br>    auto=add<br>    dpdaction=clear<br>    keyexchange=ikev2<br>    left=%any<br>    leftsubnet=0.0.0.0/0<br>    leftauth=psk<br>    leftid=qlvpn.server<br>    right=%any<br>    rightsourceip=192.168.0.0/24<br>    rightauth=eap-mschapv2<br>    rightid=qlvpn.client<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">- 添加Android配置信息</div></pre></td></tr></table></figure></p>
<p>conn ipke2vpn<br>    auto=add<br>    keyexchange=ikev2<br>    ike=aes256-sha1-modp1024!<br>    rekey=no<br>    left=%defaultroute<br>    leftsubnet=0.0.0.0/0<br>    leftauth=pubkey<br>    leftcert=server.cert.pem<br>    leftid=”C=CN, O=QLVPN, CN=106.75.193.72”<br>    right=%any<br>    rightsourceip=192.168.0.0/24<br>    rightauth=eap-mschapv2<br>    rightsendcert=never<br>    eap_identity=%any<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">**注意`leftid`必须和服务器证书`--dn`一致，为服务器的IP地址**</div><div class="line"></div><div class="line">### 配置`ipsec.secrets`</div><div class="line">添加如下配置</div></pre></td></tr></table></figure></p>
<p>: PSK qlvpn_kd2014@<br>: RSA server.pem<br>qlvpn  : EAP “kd2014@”<br>qlvpn  : XAUTH “kd2014@”<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">* PSK为iOS共享KEY</div><div class="line"></div><div class="line">### 配置`strongswan.conf`</div></pre></td></tr></table></figure></p>
<p>charon {<br>        load_modular = yes<br>        duplicheck.enable = no<br>        compress = yes<br>        plugins {<br>                include strongswan.d/charon/<em>.conf<br>        }<br>        dns1 = 8.8.8.8<br>        dns2 = 8.8.4.4<br>        nbns1 = 8.8.8.8<br>        nbns2 = 8.8.4.4<br>}<br>include strongswan.d/</em>.conf<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"></div><div class="line">## 启动strongSwan</div><div class="line">后台运行</div></pre></td></tr></table></figure></p>
<p>ipsec start<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"></div><div class="line">滚动日志</div></pre></td></tr></table></figure></p>
<p>ipsec start –nofork<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"></div><div class="line">## 配置`iptables`</div></pre></td></tr></table></figure></p>
<p>sudo iptables -A INPUT -p udp –dport 500 -j ACCEPT<br>sudo iptables -A INPUT -p tcp –dport 500 -j ACCEPT<br>sudo iptables -A INPUT -p udp –dport 4500 -j ACCEPT<br>sudo iptables -A INPUT -p tcp –dport 4500 -j ACCEPT<br>sudo iptables -t nat -A POSTROUTING -s 192.168.0.0/24 -o eth0 -j MASQUERADE<br>sudo iptables -A FORWARD -s 192.168.0.0/24 -j ACCEPT<br>```</p>
<h2 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h2><ul>
<li>使用 Strongswan 架设 Ipsec VPN<br><a href="https://zh.opensuse.org/index.php?title=SDB:Setup_Ipsec_VPN_with_Strongswan&amp;variant=zh" target="_blank" rel="external">https://zh.opensuse.org/index.php?title=SDB:Setup_Ipsec_VPN_with_Strongswan&amp;variant=zh</a></li>
</ul>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;概要&quot;&gt;&lt;a href=&quot;#概要&quot; class=&quot;headerlink&quot; title=&quot;概要&quot;&gt;&lt;/a&gt;概要&lt;/h2&gt;&lt;p&gt;使用strongSwan IKEv2 VPN协议搭建移动端VPN服务器，因iOS和Android支持的IKEv2协议类型不一样，所以要对iO
    
    </summary>
    
      <category term="VPN" scheme="http://weqeo.com/categories/VPN/"/>
    
    
      <category term="VPN" scheme="http://weqeo.com/tags/VPN/"/>
    
  </entry>
  
  <entry>
    <title>10月学习计划</title>
    <link href="http://weqeo.com/2016/10/19/10%E6%9C%88%E5%AD%A6%E4%B9%A0%E8%AE%A1%E5%88%92/"/>
    <id>http://weqeo.com/2016/10/19/10月学习计划/</id>
    <published>2016-10-19T08:12:17.000Z</published>
    <updated>2016-10-19T08:21:21.000Z</updated>
    
    <content type="html"><![CDATA[<p>前段时间，因为公司和个人的各种杂事，中断了有序的学习计划。今天打算重新拾起来。</p>
<h3 id="本月学习计划如下："><a href="#本月学习计划如下：" class="headerlink" title="本月学习计划如下："></a>本月学习计划如下：</h3><ul>
<li>完成之前尚未完成的swift版微博的练习demo  ————目标：可以熟练替代OC项目</li>
<li>复习熟悉JS，Html5                 ————目标：下月可以写个小demo</li>
<li>学习Reactive Native     ———— 目标：初步理解</li>
</ul>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;前段时间，因为公司和个人的各种杂事，中断了有序的学习计划。今天打算重新拾起来。&lt;/p&gt;
&lt;h3 id=&quot;本月学习计划如下：&quot;&gt;&lt;a href=&quot;#本月学习计划如下：&quot; class=&quot;headerlink&quot; title=&quot;本月学习计划如下：&quot;&gt;&lt;/a&gt;本月学习计划如下：&lt;/h
    
    </summary>
    
    
      <category term="学习计划" scheme="http://weqeo.com/tags/%E5%AD%A6%E4%B9%A0%E8%AE%A1%E5%88%92/"/>
    
  </entry>
  
  <entry>
    <title>Hexo中播放网易云音乐的实践</title>
    <link href="http://weqeo.com/2016/10/11/Hexo%E4%B8%AD%E6%92%AD%E6%94%BE%E7%BD%91%E6%98%93%E4%BA%91%E9%9F%B3%E4%B9%90%E7%9A%84%E5%AE%9E%E8%B7%B5/"/>
    <id>http://weqeo.com/2016/10/11/Hexo中播放网易云音乐的实践/</id>
    <published>2016-10-11T05:12:02.000Z</published>
    <updated>2016-10-12T07:30:35.000Z</updated>
    
    <content type="html"><![CDATA[<p><strong>需求：想在博客中添加一个个人的音乐播放器，不是自动播放的，用户点击可以播放。</strong></p>
<h3 id="具体步骤："><a href="#具体步骤：" class="headerlink" title="具体步骤："></a>具体步骤：</h3><h4 id="获取网易云音乐插件外链"><a href="#获取网易云音乐插件外链" class="headerlink" title="获取网易云音乐插件外链"></a>获取网易云音乐插件外链</h4><ul>
<li><strong>找到选中的歌的地址：</strong><br><img src="https://ooo.0o0.ooo/2016/10/11/57fc76bf4e77a.png" alt="Image 2016-10-11 at 11.50.29 上午.png"></li>
<li><strong>获取外链，选择是否播放模式</strong><br><img src="https://ooo.0o0.ooo/2016/10/11/57fc761ebb660.png" alt="粘贴图片.png"></li>
</ul>
<h4 id="将外链插入到hexo-themes-next-layout中的文件中"><a href="#将外链插入到hexo-themes-next-layout中的文件中" class="headerlink" title="将外链插入到hexo/themes/next/layout中的文件中"></a>将外链插入到hexo/themes/next/layout中的文件中</h4><ul>
<li><strong>我选择把播放器放在sidebar里面，所以我就选择了_macro文件夹中的 sidebar.swig文件，将之前复制的代码到了该文件中：</strong><blockquote>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">&lt;iframe frameborder=<span class="string">"no"</span> border=<span class="string">"0"</span> marginwidth=<span class="string">"0"</span> marginheight=<span class="string">"0"</span> width=86 height=86 src=<span class="string">"http://music.163.com/outchain/player?type=2&amp;id=1286452&amp;auto=0&amp;height=66"</span>&gt;&lt;/iframe&gt;</div></pre></td></tr></table></figure>
</blockquote>
</li>
</ul>
<p><img src="https://ooo.0o0.ooo/2016/10/11/57fc79e0bc744.png" alt="粘贴图片1.png"></p>
<ul>
<li><strong>如果选择放到主页的话，就放到_layout.swig文件中去就行了</strong></li>
</ul>
<h4 id="最后，保存，提交。"><a href="#最后，保存，提交。" class="headerlink" title="最后，保存，提交。"></a>最后，保存，提交。</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">hexo g <span class="_">-d</span></div></pre></td></tr></table></figure>
<p>效果图如下：<br><img src="https://ooo.0o0.ooo/2016/10/11/57fc7c9c06f4e.png" alt="DingTalk20161011134528.png"></p>
]]></content>
    
    <summary type="html">
    
      需求：想在博客中添加一个个人的音乐播放器，不是自动播放的，用户点击可以播放。
    
    </summary>
    
      <category term="Hexo相关" scheme="http://weqeo.com/categories/Hexo%E7%9B%B8%E5%85%B3/"/>
    
    
      <category term="666" scheme="http://weqeo.com/tags/666/"/>
    
  </entry>
  
  <entry>
    <title>关于Hexo中的语言出错的问题</title>
    <link href="http://weqeo.com/2016/10/09/%E5%85%B3%E4%BA%8EHexo%E4%B8%AD%E7%9A%84%E8%AF%AD%E8%A8%80%E5%87%BA%E9%94%99%E7%9A%84%E9%97%AE%E9%A2%98/"/>
    <id>http://weqeo.com/2016/10/09/关于Hexo中的语言出错的问题/</id>
    <published>2016-10-09T05:04:28.000Z</published>
    <updated>2016-10-12T08:56:06.000Z</updated>
    
    <content type="html"><![CDATA[<p>之前配置hexo的语言的时候，按照Next官方文档的方法，在站点中添加如下配置：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">language: zh-Hans  //中文模式</div></pre></td></tr></table></figure></p>
<p>但是并没有什么卵用.我之后也清除了缓存：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">hexo clean</div></pre></td></tr></table></figure></p>
<p>还是没有什么卵用。</p>
<p>最后的发现，是在local模拟的时候有问题，但是推倒Github站点的时候又没毛病了。</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;之前配置hexo的语言的时候，按照Next官方文档的方法，在站点中添加如下配置：&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/
    
    </summary>
    
      <category term="Hexo相关" scheme="http://weqeo.com/categories/Hexo%E7%9B%B8%E5%85%B3/"/>
    
    
      <category term="test" scheme="http://weqeo.com/tags/test/"/>
    
  </entry>
  
</feed>
